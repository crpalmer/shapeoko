; Wait until the planner queue is empty
%wait

; Keep a backup of current work position
%X0=posx, Y0=posy, Z0=posz

; Save modal state
%WCS = modal.wcs
%PLANE = modal.plane
%UNITS = modal.units
%DISTANCE = modal.distance
%FEEDRATE = modal.feedrate
%SPINDLE = modal.spindle
%COOLANT = modal.coolant

G21                         ; metric
M5                          ; Stop spindle
G90                         ; Absolute positioning

G53 G0 Z[global.state.SAFE_HEIGHT]
G53 X[global.state.PROBE_TOOLCHANGE_X] Y[global.state.PROBE_Y_LOCATION]
%wait


; Pause for manual tool change & probing
M0 ; Please insert a new tool

G53 X[global.state.PROBE_X_LOCATION] Y[global.state.PROBE_Y_LOCATION]
G53 Z[global.state.PROBE_Z_LOCATION]
%probe_start_z = posz
G91
G38.2 z-[global.state.PROBE_DISTANCE] F[global.state.PROBE_RAPID_FEEDRATE];fast probe (so it doesn't take forever)
G0 z2
G38.2 z-5 F40               ; "dial-it-in" probes
G4 P.25
G38.4 z10 F20
G4 P.25
G38.2 z-2 F10
G4 P.25
G38.4 z10 F5
G4 P.25
G90

%wait

%probe_end_z = posz
%probe_actual_distance = probe_start_z - probe_end_z

; Update Z offset for new tool
; note: do this in individual steps otherwise it sometimes treats some variables as strings (wtf??)
;     resulting in new_z=-31.0423.3225252

%delta_z = probe_actual_distance*1.0 - global.state.PROBE_ACTUAL_DISTANCE*1.0
%new_z = posz*1.0 + delta_z*1.0
%new_z  =  Math.round(new_z * 1000) / 1000
(old=[global.state.PROBE_ACTUAL_DISTANCE] new=[probe_actual_distance] new_z=[new_z])

G10 L20 Z[new_z]

%global.state.PROBE_ACTUAL_DISTANCE = probe_actual_distance

%wait

G91
G0 Z5
G90
G53 Z[global.state.SAFE_HEIGHT]
%wait
; Go to work zero at a SAFE_HEIGHT for Z
G0 X0 Y0

; Restore modal state
; [WCS]
[PLANE] [UNITS] [DISTANCE] [FEEDRATE] [SPINDLE] [COOLANT]
